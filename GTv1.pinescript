//@version=5
indicator("NGATMURIFX wkwkwkwkw", overlay=true)

// User Inputs
period = input.int(20, title="Period for S&D")

// Mengambil data OHLC
openPrice = open
highPrice = high
closePrice = close
lowPrice = low

// Menentukan kondisi bearish dan bullish
bearishCandle = closePrice < openPrice
bullishCandle = closePrice > openPrice

// Menghitung panjang bodi dan sumbu
bodyLength = math.abs(closePrice - openPrice)
upperWickLength = highPrice - math.max(openPrice, closePrice)
lowerWickLength = math.min(openPrice, closePrice) - lowPrice

// Menentukan kondisi untuk candle dengan bodi kecil dan sumbu hampir sama
equalWickCondition = bearishCandle and 
                     (upperWickLength > 0 and lowerWickLength > 0) and
                     (math.abs(upperWickLength - lowerWickLength) <= ((upperWickLength + lowerWickLength) * 0.1)) and 
                     (bodyLength < (highPrice - lowPrice) * 0.5)

// Menentukan zona Support and Demand (S&D)
demandZone = low >= ta.lowest(low, period)
supplyZone = high <= ta.highest(high, period)

// Menandai candle bearish yang memenuhi syarat di area S&D
highlightBearishCandle = equalWickCondition and demandZone

// Menentukan warna sinyal pembalikan
reversalColor = highlightBearishCandle ? color.yellow : color.white

// Plotting untuk menandai candle bearish dalam area S&D
bgcolor(highlightBearishCandle ? color.red : na, transp=90)
plotshape(equalWickCondition, title="Reversal Signal", location=location.abovebar, color=reversalColor, style=shape.labelup, text="Reversal", size=size.small)

// Input untuk warna garis demand dan supply
demandLineColor = input.color(color.green, title="Warna Garis Demand")
supplyLineColor = input.color(color.red, title="Warna Garis Supply")

// Variabel untuk menyimpan level garis untuk demand dan supply
var float demandLinePrice = na
var float supplyLinePrice = na

// Menghapus garis jika harga telah melewati level garis
if not na(demandLinePrice) and closePrice < demandLinePrice
    demandLinePrice := na

if not na(supplyLinePrice) and closePrice > supplyLinePrice
    supplyLinePrice := na

// Menandai area S&D dengan garis horizontal panjang ke kanan jika sinyal pembalikan
if highlightBearishCandle
    demandLinePrice := low
    supplyLinePrice := high

// Garis sinyal untuk harga sebelumnya yang belum terlewati
var line demandLine = na
var line supplyLine = na

// Menggambar garis demand dan supply jika belum dihapus
if highlightBearishCandle
    if na(demandLine)
        demandLine := line.new(bar_index, demandLinePrice, bar_index + 300, demandLinePrice, color=demandLineColor, width=1, style=line.style_dashed)

    if na(supplyLine)
        supplyLine := line.new(bar_index, supplyLinePrice, bar_index + 300, supplyLinePrice, color=supplyLineColor, width=1, style=line.style_dashed)

// Memperbarui garis demand dan supply yang ada
if not na(demandLine)
    line.set_xy1(demandLine, bar_index, demandLinePrice)
    line.set_xy2(demandLine, bar_index + 300, demandLinePrice)

if not na(supplyLine)
    line.set_xy1(supplyLine, bar_index, supplyLinePrice)
    line.set_xy2(supplyLine, bar_index + 300, supplyLinePrice)

// Menghapus garis jika harga telah melewati level sinyal
if not na(demandLinePrice) and closePrice >= demandLinePrice
    line.delete(demandLine)
    demandLine := na

if not na(supplyLinePrice) and closePrice <= supplyLinePrice
    line.delete(supplyLine)
    supplyLine := na

// Menentukan OrderBlock hanya pada sinyal
var line orderBlockLine = na
var float orderBlockPrice = na  // Deklarasi variabel orderBlockPrice

if highlightBearishCandle
    // Menyimpan harga untuk OrderBlock jika sinyal terdeteksi
    orderBlockPrice := low
    if not na(orderBlockLine)
        line.delete(orderBlockLine)  // Hapus garis sebelumnya jika ada

    orderBlockLine := line.new(bar_index, orderBlockPrice, bar_index + 300, orderBlockPrice, color=color.blue, width=2, style=line.style_solid)

// Menghapus OrderBlock jika harga telah melewati level
if not na(orderBlockLine) and closePrice <= orderBlockPrice
    line.delete(orderBlockLine)
    orderBlockLine := na
    orderBlockPrice := na  // Reset orderBlockPrice

// Memastikan OrderBlock berhenti saat harga menyentuh level
if not na(orderBlockLine) and closePrice > orderBlockPrice
    line.delete(orderBlockLine)
    orderBlockLine := na
    orderBlockPrice := na  // Reset orderBlockPrice

// Deteksi Shooting Star
isShootingStar = bullishCandle and 
                 upperWickLength > bodyLength * 2 and 
                 lowerWickLength < bodyLength * 0.1 and 
                 closePrice < openPrice

// Menandai Shooting Star
bgcolor(isShootingStar ? color.blue : na, transp=90)
plotshape(isShootingStar, title="Shooting Star Signal", location=location.abovebar, color=color.blue, style=shape.labelup, text="Shooting Star", size=size.small)
